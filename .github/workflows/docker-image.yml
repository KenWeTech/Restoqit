
name: Docker Image CI

on:
  workflow_dispatch:
  release:
    types: [published]
    
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to the GitHub Container Registry
      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Extract metadata (like tags and labels) for the Docker image
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.release.prerelease == false }}
            type=ref,event=branch,enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value=latest,enable=${{ github.event_name == 'workflow_dispatch' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
         
          labels: |
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}
            org.opencontainers.image.description=Restoqit is an app that shows simple overview of things you might need to restock for your Grocy instance.
            org.opencontainers.image.licenses=
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.title=Restoqit
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            
      # 4. Set up QEMU for multi-platform builds (optional, but good practice)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 5. Set up Docker Buildx for advanced build capabilities
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6. Build the image and push it to the registry
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Restoqit/
          push: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' }}
          # Use the tags generated by the metadata action (e.g., :latest, :sha-xxxxxxx)
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Build for both standard and ARM-based architectures (e.g., Raspberry Pi)
          platforms: linux/amd64,linux/arm64
